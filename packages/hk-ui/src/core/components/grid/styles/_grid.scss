@import 'hkuisass/variables';

$grid-row-name: 'row' !default; // Class name prefix for the grid's columns.
$grid-column-prefix: 'col' !default; // Class name prefix for the grid's columns.
$grid-row-parent-layout-prefix: 'cols' !default;
$grid-column-offset-suffix: 'offset' !default; // Class name suffix for the grid's offsets.

$grid-small-prefix: 'sm' !default; // Small screen class prefix for grid.
$grid-medium-prefix: 'md' !default; // Medium screen class prefix for grid.
$grid-large-prefix: 'lg' !default; // Large screen class prefix for grid.
$grid-column-count: 12 !default; // Number of columns in the grid (integer value only).

.#{$ns}.#{$grid-row-name},
.#{$ns} .#{$grid-row-name} {
    box-sizing: border-box;
    display: flex;
    flex: 0 1 auto;
    flex-flow: row wrap;
    width: 100%;
}

@mixin generate-grid-size($size-prefix) {
    .#{$ns}.#{$grid-row-name},
    .#{$ns} .#{$grid-row-name} {
        & > .#{$grid-column-prefix}-#{$size-prefix},
        & > [class^='#{$grid-column-prefix}-#{$size-prefix}-'],
        & > [class^='#{$grid-column-prefix}-#{$size-prefix}-#{$grid-column-offset-suffix}-'],
        &[class*='#{$grid-row-parent-layout-prefix}-#{$size-prefix}-'] > * {
            box-sizing: border-box;
            flex: 0 0 auto;
        }

        // Grid column specific definition for flexible column.
        & > .#{$grid-column-prefix}-#{$size-prefix},
        & > .#{$grid-row-name}.#{$grid-row-parent-layout-prefix}-#{$size-prefix} > * {
            max-width: 100%;
            flex-grow: 1;
            flex-basis: 0;
        }

        @for $i from 1 through $grid-column-count {
            & > .#{$grid-column-prefix}-#{$size-prefix}-#{$i},
            &.#{$grid-row-parent-layout-prefix}-#{$size-prefix}-#{$i} > * {
                max-width: #{($i * 100% / $grid-column-count)};
                flex-basis: #{($i * 100% / $grid-column-count)};
            }

            & > .#{$grid-column-prefix}-#{$size-prefix}-offset-#{$i} {
                @if ($i - 1) == 0 {
                    margin-left: 0;
                } @else {
                    margin-left: #{($i * 100% / $grid-column-count)};    
                }
            }
        }
    }
}

@include generate-grid-size($grid-small-prefix); 

@media screen and (min-width: 40rem) {
    @include generate-grid-size($grid-medium-prefix); 
}

@media screen and (min-width: 64rem) {
    @include generate-grid-size($grid-large-prefix); 
}